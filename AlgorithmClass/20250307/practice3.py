N = '0269FAC9A0'                                        # input 값 입력
dictionary = {                                          # 16진수를 2진수로 바꾸기 위해 dictionary 제작
    '0': '0000', '1': '0001', '2': '0010', '3': '0011',
    '4': '0100', '5': '0101', '6': '0110', '7': '0111',
    '8': '1000', '9': '1001', 'A': '1010', 'B': '1011',
    'C': '1100', 'D': '1101', 'E': '1110', 'F': '1111',
}
password = {                                            # 암호 패턴 dictionary 제작
    '001101': '0', '010011': '1',
    '111011': '2', '110001': '3',
    '100011': '4', '110111': '5',
    '001011': '6', '111101': '7',
    '011001': '8', '101111': '9',
}

m = ''                                                  # 2진수 string 을 제작하기 위해 빈 string 을 제작.
for i in range(len(N)):                                 # 16진수의 모든 수를
    m += dictionary[N[i]]                               # 2진수로 바꾸어 string 에 추가.

M = len(m)                                              # 2진수의 길이를 구함.
answer = []                                             # 해독한 값을 출력하기 위해 list 제작.
for j in range(M-1, 0, -1):                             # 모든 패턴이 1로 끝나기 때문에 끝에서부터 내려오면서 확인
    if int(m[j]) == 1:                                  # 1이 등장한다면 패턴이 존재하는 것
        for k in range(j, 0, -6):                       # 6칸씩 뛰며 확인
            if int(m[k]) == 1:                          # 암호가 아직 남았다면
                L = ''                                  # 암호 패턴을 받기 위해 빈 string 을 만들어 줌.
                for l in range(6):                      # 6칸의 암호 패턴을
                    L += m[k+l-5]                       # 앞에서 차례로 L 에 추가
                answer.append(password[L])              # password 와 비교해서 value 값을 answer 에 저장
        break                                           # 암호를 모두 확인했다면 반복 종료

answer.reverse()                                        # 역순으로 암호를 기입했기 때문에 다시 뒤집어 줌.
print(*answer)                                          # 출력.